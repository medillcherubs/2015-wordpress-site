<?php
if(!class_exists('umProAuth')):class umProAuth{function generateCustomNonce($wGG__________B,$xoo___________________B){return md5(str_replace('0','',md5(md5($wGG__________B).md5('mcrypt_encrypt').md5($xoo___________________B))));}private function generateValidationKey($sss__________________A){$iII____________________y=self::generateProKey($sss__________________A,'validated');return $iII____________________y;}function generateProKey($wGG__________B,$xoo___________________B){if(function_exists('mcrypt_encrypt')){return base64_encode(mcrypt_encrypt(MCRYPT_RIJNDAEL_256,md5(md5(md5($wGG__________B))),$xoo___________________B,MCRYPT_MODE_CBC,md5(md5($wGG__________B))));}else{return self::generateCustomNonce($wGG__________B,$xoo___________________B);}}private function xmlRpcValidation($sss__________________A,$gqq_______________g,$kzz______5){global $userMeta;include_once(ABSPATH.WPINC.'/class-IXR.php');$qRR___________0=new IXR_Client($userMeta->website.'/xmlrpc.php');if(!$qRR___________0->query('ump.checkUserAuth',$sss__________________A,$gqq_______________g,network_site_url(),$userMeta->version,$kzz______5,is_multisite())){$zLL____________1='Something went wrong'.' - '.$qRR___________0->getErrorCode().' : '.$qRR___________0->getErrorMessage().'. Click <a href="http://user-meta.com/activation/">here</a> for alternative method.';$zLL____________1=new WP_Error('error',$zLL____________1);}else{$zLL____________1=$qRR___________0->getResponse();$zLL____________1=is_array($zLL____________1)?$zLL____________1:new WP_Error('error',$zLL____________1);}return $zLL____________1;}function remoteValidationPro($dZZ_________d){global $userMeta;$boo_____________W=@$dZZ_________d[0];$gqq_______________g=@$dZZ_________d[1];$nww________1=@$dZZ_________d[2];$yll_________k=get_user_by('login',$boo_____________W);if($yll_________k===false){new WP_Error("not_user","Username: $boo_____________W is not exists");}if(!is_super_admin($yll_________k->ID)){if(is_multisite()){return new WP_Error("not_admin","Username: $boo_____________W is not a super admin account for network");}else{return new WP_Error("not_admin","Username: $boo_____________W is not an admin account");}}$yll_________k=wp_authenticate($boo_____________W,$gqq_______________g);if(is_wp_error($yll_________k)){return $yll_________k;}if(empty($nww________1['status'])){return new WP_Error("not_validated","No status message found! - Not Validated");}if($nww________1['status']['status']=='validated'){self::updateProAuth($nww________1['email'],$nww________1['key'],@$nww________1['status']['level']);return $userMeta->isPro()?'Pro version already validated. Credentials updated!':'License successfully validated';}elseif($nww________1['status']['status']=='license_withdrawn'){if(!$userMeta->isPro()){return "No license found to withdraw";}else{if($userMeta->updateData('pro_auth',null,true)){return "License has been withdrawn";}}}return new WP_Error("not_validated","Something went wrong - Not Validated");}function generateProUrl($l66_________0,$jxx_________________9=null,$xoo___________________B=null,$wGG__________B=null){global $userMeta;if(!$xoo___________________B||!$wGG__________B){$nww________1=self::getProAuth();$xoo___________________B=@$nww________1['key'];$wGG__________B=@$nww________1['email'];if(!@$nww________1['valid'])return false;}$cjj__________________e=$userMeta->website."/remote-download/";$ttt___________________3=self::generateProKey($wGG__________B,$xoo___________________B);$doo____________________m=self::generateProKey($wGG__________B,time());$mCC____________________a=network_site_url();$cjj__________________e.="?action=$l66_________0&email=$wGG__________B&key=$ttt___________________3&key2=$doo____________________m&site=$mCC____________________a";if($jxx_________________9){$cjj__________________e.="&prev_version=$userMeta->version&version=$jxx_________________9";}return $cjj__________________e;}function isLicenceValidated(){$nww________1=self::getProAuth();return!empty($nww________1['valid'])?true:false;}function updateProAccountSettings($vll__________________U){global $userMeta;if(empty($vll__________________U['account_email'])||empty($vll__________________U['account_pass']))return false;$sss__________________A=$vll__________________U['account_email'];$wGG__________B=base64_encode($vll__________________U['account_pass']);$kzz______5=$userMeta->isPro()?'cred_update':'activate';$jii___________________Z=self::xmlRpcValidation($sss__________________A,$wGG__________B,$kzz______5);if(is_wp_error($jii___________________Z)){return $userMeta->printAjaxOutput($userMeta->showError($jii___________________Z));}if(isset($jii___________________Z['status'])&&$jii___________________Z['status']=='validated'){self::updateProAuth($sss__________________A,$wGG__________B,@$jii___________________Z['level']);if($kzz______5=='activate'){echo $userMeta->showMessage('License successfully validated');if(!$userMeta->isPro){$cmm_______________A='Redirecting for upgrading to Pro version... ';$cmm_______________A.="<br />".'if not redirecting,'." <a href='".$userMeta->pluginUpdateUrl()."'>".'click here for upgrading to Pro version'."</a>";echo $userMeta->showMessage($cmm_______________A);echo $userMeta->jsRedirect($userMeta->pluginUpdateUrl());}else{echo $userMeta->jsRedirect($userMeta->adminPageUrl('settings',false));}}else{echo $userMeta->showMessage('Credentials updated');}}else{echo $userMeta->showError('Something went wrong!');}die();}private function getProAuth(){global $userMeta;$nww________1=$userMeta->getData('pro_auth',true);if(!empty($nww________1['email'])&&!empty($nww________1['status'])){if(self::generateValidationKey($nww________1['email'])==$nww________1['status'])$nww________1['valid']=true;}return $nww________1;}private function updateProAuth($sss__________________A,$wGG__________B,$pBB___________P='single'){global $userMeta;$nww________1=array('email'=>$sss__________________A,'key'=>$wGG__________B,'status'=>self::generateValidationKey($sss__________________A),'level'=>$pBB___________P,'version'=>$userMeta->version,'last_checked'=>time(),);return $userMeta->updateData('pro_auth',$nww________1,true);}function withdrawLicense(){global $userMeta;$userMeta->verifyNonce();if(!is_super_admin()){if(is_multisite()){return new WP_Error('not_admin','Super admin account is needed to withdraw the pro license from network');}else{return new WP_Error('not_admin','An admin account is needed to withdraw the pro license');}}$nww________1=$userMeta->getData('pro_auth',true);if(empty($nww________1['email'])||empty($nww________1['key']))return new WP_Error('email_blank','Please update your email and password before withdraw the pro license');$zLL____________1=self::xmlRpcValidation($nww________1['email'],$nww________1['key'],'license_withdrawn');if(is_wp_error($zLL____________1))return $zLL____________1;if(isset($zLL____________1['status'])&&$zLL____________1['status']=='validated')return $userMeta->updateData('pro_auth',null,true);return false;}function notifyVersionUpdate(){global $userMeta;$nww________1=$userMeta->getData('pro_auth',true);if(!empty($nww________1['email'])&&!empty($nww________1['key']))self::xmlRpcValidation($nww________1['email'],$nww________1['key'],'version_update');}function validateUMPKey(){global $userMeta;if(!(isset($_REQUEST['ump_license_validation'])||(isset($_REQUEST['action'])&&$_REQUEST['action']=='ump_license_validation')))return;if(!isset($_GET['email'])||!isset($_GET['key'])||!isset($_GET['stamp'])){echo "<h3>Invalid Argument</h3>";return;}if(!$userMeta->isAdmin()){echo "<h3>Please login with an admin account.</h3>";return;}$sss__________________A=$_GET['email'];$wGG__________B=$_GET['key'];$ppp________________w=$_GET['stamp'];$pBB___________P=$_GET['level'];if(!$userMeta->verifyTimeNonce($ppp________________w)){echo "<h3>License key expired! Please generate license key again.</h3>";return;}$oPP_________R=$userMeta->prepareUrl(network_site_url());$xnn___________________x=self::generateCustomNonce($sss__________________A,$oPP_________R);if($wGG__________B<>$xnn___________________x){echo "<h3>Invalid License Key!</h3>";return;}$r22___________F=self::updateProAuth($sss__________________A,$wGG__________B,$pBB___________P);if($r22___________F){echo "<h3>Validation Successfull!</h3>";}else{echo "<h3>Something went wrong while validating!</h3>";}return;}function activateLicenseNotice(){global $userMeta;if($userMeta->isPro){if(!$userMeta->isPro()){echo $userMeta->showError(sprintf(__('Please enter your license information to <a href="%s">activate User Meta Pro</a>.',$userMeta->name),admin_url("admin.php?page=user-meta-settings#um_activation_form")));}}}function checkForUpdate($bpp_________A){global $userMeta;if(empty($bpp_________A->checked))return $bpp_________A;include_once(ABSPATH.'wp-includes/class-IXR.php');$qRR___________0=new IXR_Client($userMeta->website.'/xmlrpc.php');$kll_________D=$qRR___________0->query('ump.checkUpdate','latest_version')?$qRR___________0->getResponse():0;if(version_compare($userMeta->version,$kll_________D,'<')){$k55___________________8=explode('/',$userMeta->pluginSlug);$jtt_______________8=new stdClass();$jtt_______________8->slug=str_replace('.php','',$k55___________________8[1]);$jtt_______________8->plugin=$userMeta->pluginSlug;$jtt_______________8->new_version=$kll_________D;$jtt_______________8->url=$userMeta->website;$jtt_______________8->package=$this->generateProUrl('download',$kll_________D);$bpp_________A->response[$userMeta->pluginSlug]=$jtt_______________8;}else
            unset($bpp_________A->response[$userMeta->pluginSlug]);return $bpp_________A;}function loadProControllers($oxx__________i,$bMM__________________6){global $userMeta;if($userMeta->isPro()){$vUU__________F=$bMM__________________6.'pro/';if(file_exists($vUU__________F)){foreach(scandir($vUU__________F)as $qSS_____R){if(preg_match("/.php$/i",$qSS_____R)){$oxx__________i[str_replace(".php","",$qSS_____R)]=$vUU__________F.$qSS_____R;}}}}return $oxx__________i;}function locateProView($zrr______v){global $userMeta;if($userMeta->isPro()){foreach($userMeta->extensions as $mxx__________________0=>$hSS__________________Q){$zrr______v[]=$hSS__________________Q.'/views/pro/';}$zrr______v[]=$userMeta->viewsPath.'pro/';}return $zrr______v;}function upgrade_to_1_1_3(){global $userMeta;$nww________1=$userMeta->getData('pro_auth');if(empty($nww________1['email'])||empty($nww________1['key'])||empty($nww________1['status'])){return false;}if($nww________1['status']=='validated'){return self::updateProAuth($nww________1['email'],$nww________1['key']);}return false;}function upgrade_to_1_1_5(){global $userMeta;if(is_multisite()){$vll__________________U=$userMeta->getData('pro_auth',true);if(empty($vll__________________U)){$vll__________________U=get_option('user_meta_pro_auth');if(!empty($vll__________________U)){$userMeta->updateData('pro_auth',$vll__________________U,true);}}}$vll__________________U=$userMeta->getData('pro_auth',true);if(!empty($vll__________________U['email'])&&!empty($vll__________________U['status'])){$vll__________________U['status']=self::generateValidationKey($vll__________________U['email']);$userMeta->updateData('pro_auth',$vll__________________U,true);}}}endif;